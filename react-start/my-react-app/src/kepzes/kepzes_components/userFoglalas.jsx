import React, { useState, useEffect } from "react";
import axios from "axios";
import "../kepzes_styles/userFoglalas.css"; // üìå CSS f√°jl a k√°rty√°khoz

function FoglalasKartyak() {
    const [idopontok, setIdopontok] = useState([]);
    const [foglalasAdatok, setFoglalasAdatok] = useState({
        nev: "",
        email: "",
        telefon: "",
    });
    const [kivalasztottIdopont, setKivalasztottIdopont] = useState(null);
    const [modalNyitva, setModalNyitva] = useState(false);

    useEffect(() => {
        fetchIdopontok();
    }, []);

    const fetchIdopontok = async () => {
        try {
            const response = await axios.get("http://localhost:5000/api/idopontok");
            setIdopontok(response.data);
        } catch (error) {
            console.error("Hiba az id≈ëpontok lek√©rdez√©sekor:", error);
        }
    };

    const handleFoglalas = async () => {
        if (!foglalasAdatok.nev || !foglalasAdatok.email || !foglalasAdatok.telefon) {
            alert("K√©rlek, t√∂ltsd ki az √∂sszes mez≈ët!");
            return;
        }

        try {
            const response = await axios.post("http://localhost:5000/api/book", {
                idopont_id: kivalasztottIdopont.id,
                user_nev: foglalasAdatok.nev,
                user_email: foglalasAdatok.email,
                user_telefon: foglalasAdatok.telefon,
            });

            alert(response.data.message);
            fetchIdopontok();
            setModalNyitva(false); // Bez√°rjuk a mod√°lt sikeres foglal√°s ut√°n
        } catch (error) {
            console.error("Hiba a foglal√°s sor√°n:", error);
            alert("Hiba t√∂rt√©nt a foglal√°s sor√°n.");
        }
    };

    return (
        <div className="foglalas-kontener">
            <h2>El√©rhet≈ë id≈ëpontok</h2>

            {/* üü¢ Id≈ëpont k√°rty√°k */}
            <div className="foglalas-kartyak-kontener">
                {idopontok.map((idopont) => (
                    <div key={idopont.id} className="foglalas-kartya" onClick={() => { 
                        setKivalasztottIdopont(idopont);
                        setModalNyitva(true);
                    }}>
                        <h3>{idopont.datum}</h3>
                        <p>Max f√©r≈ëhely: {idopont.max_ferohely} f≈ë</p>
                        <p>{idopont.kezdes_ido ? `${idopont.kezdes_ido} - ${idopont.vege_ido}` : "Id≈ëpont nincs megadva"}</p>
                    </div>
                ))}
            </div>

            {/* üü¢ Foglal√°si mod√°lis ablak */}
            {modalNyitva && (
                <div className="foglalas-modal">
                    <div className="foglalas-modal-tartalom">
                        <span className="foglalas-bezaras" onClick={() => setModalNyitva(false)}>&times;</span>
                        <h3>Foglal√°s {kivalasztottIdopont?.datum} id≈ëpontra</h3>

                        <input type="text" placeholder="N√©v" value={foglalasAdatok.nev} onChange={(e) => setFoglalasAdatok({...foglalasAdatok, nev: e.target.value})} />
                        <input type="email" placeholder="Email" value={foglalasAdatok.email} onChange={(e) => setFoglalasAdatok({...foglalasAdatok, email: e.target.value})} />
                        <input type="tel" placeholder="Telefonsz√°m" value={foglalasAdatok.telefon} onChange={(e) => setFoglalasAdatok({...foglalasAdatok, telefon: e.target.value})} />

                        <button className="foglalas-gomb" onClick={handleFoglalas}>Foglal√°s</button>
                    </div>
                </div>
            )}
        </div>
    );
}

export default FoglalasKartyak;
